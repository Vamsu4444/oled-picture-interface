#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET    -1

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// 16x16 binary image (example: a heart shape)
const uint8_t myBitmap[] PROGMEM = {
 // 'final-image', 128x64px

	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x02, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x08, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc8, 0x10, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x7f, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x19, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x0f, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x39, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x07, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x07, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x61, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcc, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x00, 0x3f, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x02, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x00, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 
0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xdf, 0xff, 0xff, 0xf0, 0x7f, 
0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xdf, 0xff, 0xff, 0xff, 0xff, 
0x03, 0x61, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xdf, 0xff, 0xe1, 0xdf, 0xff, 0xff, 0xff, 0xff, 
0x07, 0xb8, 0x7f, 0xff, 0xff, 0xf8, 0x0f, 0xff, 0xef, 0xff, 0xe0, 0x8f, 0xff, 0xff, 0xff, 0xff, 
0x03, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x07, 0xff, 0x8f, 0xff, 0xc3, 0xbf, 0xff, 0xff, 0xff, 0xff, 
0x03, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x03, 0xff, 0x07, 0xfd, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x02, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x81, 0x7e, 0x00, 0x60, 0x03, 0xef, 0xff, 0xff, 0xff, 0xff, 
0x01, 0xff, 0xff, 0xff, 0xff, 0xfb, 0x80, 0x40, 0x18, 0x00, 0x03, 0xe7, 0xff, 0xff, 0xff, 0xff, 
0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x3f, 0x01, 0x81, 0xf7, 0xff, 0xff, 0xff, 0xff, 
0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0x00, 0xff, 0xff, 0xc1, 0xf3, 0xff, 0xff, 0xff, 0xff, 
0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0xff, 0x80, 0xf3, 0xff, 0xff, 0xff, 0xff, 
0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0x08, 0x73, 0xff, 0xff, 0xff, 0xff, 
0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0x0c, 0x01, 0xff, 0xff, 0xff, 0xbf, 
0x00, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x10, 0xff, 0xe7, 0xfa, 0x1e, 0x01, 0xff, 0xff, 0xff, 0xbf, 
0x00, 0x7f, 0xff, 0xff, 0xff, 0xfc, 0x19, 0xff, 0x44, 0xc0, 0x1e, 0x00, 0xff, 0xff, 0xff, 0xff, 
0x00, 0x7f, 0xff, 0xff, 0xff, 0xf8, 0x1c, 0xe0, 0x00, 0x00, 0x1f, 0x04, 0xff, 0xff, 0xff, 0xb8, 
0x00, 0x7f, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xfe, 0xe1, 0xe0, 0x1f, 0x04, 0xff, 0xff, 0xff, 0x81, 
0x00, 0x1f, 0xff, 0xff, 0xff, 0xe0, 0x7d, 0xff, 0xe3, 0xf0, 0x7f, 0x8c, 0xff, 0xff, 0xfc, 0x03, 
0x00, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xfe, 0xc7, 0x80, 0x7f, 0x8c, 0xff, 0xff, 0xfe, 0x00, 
0x00, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xf0, 0x83, 0x40, 0x1f, 0x8c, 0xff, 0xff, 0xfc, 0x00, 
0x00, 0x1f, 0xfc, 0x7f, 0xff, 0xe0, 0x7f, 0xe0, 0x01, 0x00, 0x1f, 0xdc, 0x7f, 0xff, 0xf0, 0x00, 
0x00, 0x1f, 0xfc, 0x3f, 0xff, 0xf0, 0x7f, 0xfd, 0x20, 0x01, 0x1f, 0xdc, 0x7f, 0xff, 0xf0, 0x00, 
0x00, 0x3f, 0xff, 0x7f, 0xff, 0xf0, 0xff, 0xff, 0xfd, 0xe3, 0x1f, 0xde, 0x7f, 0xff, 0xe0, 0x00, 
0x00, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf9, 0xf3, 0x9f, 0xde, 0x7f, 0xff, 0xc0, 0x00, 
0x00, 0x0f, 0xc5, 0x7f, 0xff, 0xe0, 0xfd, 0xff, 0xdf, 0xf3, 0x9f, 0xcc, 0x7f, 0xff, 0xc0, 0x00, 
0x00, 0x07, 0xcc, 0x0f, 0xff, 0xe0, 0xfc, 0x20, 0x7f, 0xe7, 0x1f, 0xce, 0x7f, 0xff, 0xe0, 0x00, 
0x00, 0x03, 0x85, 0x0f, 0xff, 0x41, 0xfc, 0x00, 0x5b, 0x84, 0x1f, 0xee, 0x7f, 0xff, 0x80, 0x00, 
0x00, 0x07, 0x80, 0xaf, 0xff, 0xe1, 0xfc, 0x02, 0x00, 0x00, 0x1f, 0xec, 0xff, 0xff, 0x00, 0x00, 
0x00, 0x00, 0xbe, 0x7f, 0xbf, 0xe1, 0xf0, 0x0a, 0x00, 0x00, 0x1f, 0xec, 0xff, 0xff, 0x00, 0x00, 
0x00, 0x0f, 0xff, 0xff, 0xff, 0xc3, 0xf0, 0x00, 0x0f, 0xc0, 0x0f, 0xec, 0xff, 0xfe, 0x00, 0x00, 
0x00, 0x0f, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xc0, 0x08, 0x00, 0x0f, 0xfc, 0xff, 0xf8, 0x00, 0x00, 
0x00, 0x00, 0xff, 0xf8, 0xff, 0xc3, 0xff, 0xff, 0x08, 0x00, 0x0f, 0xfc, 0xff, 0xf0, 0x00, 0x00, 
0x00, 0x00, 0x09, 0xfc, 0x07, 0xe3, 0xff, 0xff, 0xf0, 0x07, 0xff, 0xe0, 0xff, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0xa7, 0x87, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x7f, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x03, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x7a, 0x00, 0x00, 0x00
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 1040)


void setup() {
  Serial.begin(9600);
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for (;;);
  }

  display.clearDisplay();

  // Draw bitmap at (x, y), width = 16, height = 16
  display.drawBitmap(0, 0, myBitmap, 128 , 64, WHITE);

  display.display();
}

void loop() {
  // Nothing here
}
